// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ServerCodeTest.Data;

#nullable disable

namespace ServerCodeTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240831132152_initialize_data")]
    partial class initialize_data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ServerCodeTest.Models._dbo_technicians", b =>
                {
                    b.Property<int>("technicianid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("technicianid"));

                    b.Property<string>("technicianemail")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("technicianname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR");

                    b.HasKey("technicianid");

                    b.ToTable("technicians");

                    b.HasData(
                        new
                        {
                            technicianid = 5,
                            technicianemail = "dschrute@dundermifflin.com",
                            technicianname = "Dwight Schrute"
                        },
                        new
                        {
                            technicianid = 6,
                            technicianemail = "mscott@dundermifflin.com",
                            technicianname = "Michael Scott"
                        },
                        new
                        {
                            technicianid = 8,
                            technicianemail = "creed@dundermifflin.com",
                            technicianname = "Creed"
                        });
                });

            modelBuilder.Entity("ServerCodeTest.Models._dbo_workorders", b =>
                {
                    b.Property<int>("wonum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("wonum"));

                    b.Property<string>("contactname")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("contactnumber")
                        .HasMaxLength(25)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("dateassigned")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("datecomplete")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("datereceived")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("problem")
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("techniciancomments")
                        .HasColumnType("text");

                    b.Property<int?>("technicianid")
                        .HasColumnType("integer");

                    b.HasKey("wonum");

                    b.ToTable("workorders");

                    b.HasData(
                        new
                        {
                            wonum = 2,
                            contactname = "Oscar",
                            contactnumber = "555-456-0003",
                            dateassigned = new DateTime(2014, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            datecomplete = new DateTime(2014, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            datereceived = new DateTime(2014, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "oscar@lakecountyfl.gov",
                            problem = "Fax not working.",
                            status = "Closed",
                            techniciancomments = "Fax has been disconnected. Uses too much power.",
                            technicianid = 5
                        },
                        new
                        {
                            wonum = 3,
                            contactname = "Jim Harper",
                            contactnumber = "555-456-0002",
                            dateassigned = new DateTime(2014, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            datecomplete = new DateTime(2014, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            datereceived = new DateTime(2014, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "jharper@dundermifflin.com",
                            problem = "Unable to call Pam",
                            status = "Closed",
                            techniciancomments = "Problem solved.",
                            technicianid = 5
                        },
                        new
                        {
                            wonum = 4,
                            contactname = "Pam Harper",
                            contactnumber = "555-456-0001",
                            dateassigned = new DateTime(2014, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            datereceived = new DateTime(2014, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "pharper@dundermifflin.com",
                            problem = "Unable to call Jim",
                            status = "Assigned",
                            technicianid = 6
                        },
                        new
                        {
                            wonum = 5,
                            contactname = "Pam Harper",
                            contactnumber = "555-456-0001",
                            dateassigned = new DateTime(2014, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            datereceived = new DateTime(2014, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "pharper@dundermifflin.com",
                            problem = "Phone is turning off.",
                            status = "Assigned",
                            technicianid = 7
                        },
                        new
                        {
                            wonum = 6,
                            contactname = "Creed",
                            contactnumber = "555-456-0004",
                            datereceived = new DateTime(2014, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "creed@lakecountyfl.gov",
                            problem = "Voicemail message is me. Need to change to me.",
                            status = "Assigned",
                            technicianid = 7
                        },
                        new
                        {
                            wonum = 7,
                            datereceived = new DateTime(2014, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "oscar@dundermifflin.com",
                            status = "Assigned"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
